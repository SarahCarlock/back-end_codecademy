XSS: Cross-Site Scripting
Where are security headers found? In an HTTP response received from a web server.
Strict-Transport-Security: This header lets the server tell the browser that only the HTTPS version of the requested site is available. This enforces the use of HTTPS, which is encrypted compared to plain HTTP, 
    ensuring that all communication between the client and the server occurs on a more secure transport layer.
example: strict-Transport-Security: max-age=31536000; includeSubDomains
    includeSubDomains value tells the browser that the current site, including all of its sub-domains, is HTTPS-only.
    max-age field tells the browser to remember this for the next year (31536000 seconds = 1 year), reducing redirect responses to the HTTPS version of the site in the future.
Content-Security-Policy defines an allowlist of sources of content. This restricts the assets that the browser can load while they’re on the current website. This can prevent Cross-Site Scripting (XSS) attacks, 
    where scripts from sources outside the site are executed.
example: Content-Security-Policy: script-src 'self';
    script-src option restricts which resources JavaScript can be loaded from.
    self value indicates that the browser should only run scripts from the current domain.
X-Frame-Options: This header stops the current page from being hidden in an <iframe> tag in another site’s HTML. This helps prevent clickjacking; a situation where an attacker loads your webpage in an iframe, 
    hides the iframe using CSS, and tricks a user into unknowingly clicking on and sending a request to your webpage.
X-Frame-Options header that help prevent this type of attack:
    X-Frame-Options: DENY = means your page can't be hidden in an iframe anywhere
    X-Frame-Options: SAMEORIGIN = only allows this page to be put into an iframe within your own domain
    X-Frame-Options: ALLOW-FROM https://example.com = lets you list sites that are allowed to put the current content in an iframe
Some other common headers include: X-Content-Type-Options, Referrer-Policy

nginx
    The following line is added to an nginx server’s config file to add the Strict-Transport-Security header to all HTTP responses.
    add_header strict-transport-security 'max-age=31536000; includeSubDomains always;'
Apache:
    To add the Strict-Transport-Security header, you can add the following line to Apache server’s config file located at /etc/httpd/conf/httpd.conf:
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
Microsoft IIS
    If you use Windows IIS, you can add security headers in your the Web.config file’s <httpProtocol> section like so:

        <system.webServer>
        ...

        <httpProtocol>
            <customHeaders>
            <add name="Content-Security-Policy" value="default-src 'self';" />
            </customHeaders>
        </httpProtocol>

        ...
        </system.webServer>

Check Security Headers: https://securityheaders.com/

